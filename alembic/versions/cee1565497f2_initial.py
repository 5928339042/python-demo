"""initial

Revision ID: cee1565497f2
Revises: 
Create Date: 2023-11-27 13:11:38.186872

"""
from datetime import datetime
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "cee1565497f2"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    planets = op.create_table(
        "planets",
        sa.Column("id", sa.Text(), nullable=False),
        sa.Column("name", sa.Text(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("planets_pkey")),
        schema="interview",
    )
    stations = op.create_table(
        "stations",
        sa.Column("id", sa.Text(), nullable=False),
        sa.Column("name", sa.Text(), nullable=False),
        sa.Column("population", sa.Integer(), nullable=False),
        sa.Column("established_on", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column(
            "type",
            sa.Enum("military", "mining", name="stationtype", schema="interview"),
            nullable=False,
        ),
        sa.Column("planet_id", sa.Text(), nullable=False),
        sa.ForeignKeyConstraint(
            ["planet_id"],
            ["interview.planets.id"],
            name=op.f("stations_planet_id_fkey"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("stations_pkey")),
        schema="interview",
    )

    op.bulk_insert(
        planets,
        [
            {
                "id": "earth",
                "name": "Earth",
            },
            {
                "id": "mars",
                "name": "Mars",
            },
            {
                "id": "pluto",
                "name": "Pluto",
            },
        ],
    )

    op.bulk_insert(
        stations,
        [
            {
                "id": "london",
                "name": "London",
                "population": 1000,
                "established_on": datetime.fromisoformat("2024-07-22T00:00:00+00:00"),
                "type": "military",
                "planet_id": "earth",
            },
            {
                "id": "moscow",
                "name": "Moscow",
                "population": 10000,
                "established_on": datetime.fromisoformat("2023-07-22T00:00:00+00:00"),
                "type": "military",
                "planet_id": "earth",
            },
            {
                "id": "newyork",
                "name": "New York",
                "population": 3000,
                "established_on": datetime.fromisoformat("2020-07-22T00:00:00+00:00"),
                "type": "military",
                "planet_id": "earth",
            },
            {
                "id": "endor",
                "name": "Endor",
                "population": 3600,
                "established_on": datetime.fromisoformat("2022-07-22T00:00:00+00:00"),
                "type": "mining",
                "planet_id": "pluto",
            },
        ],
    )

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("stations", schema="interview")
    op.drop_table("planets", schema="interview")
    # ### end Alembic commands ###
